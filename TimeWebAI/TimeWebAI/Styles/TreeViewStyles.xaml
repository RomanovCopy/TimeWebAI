<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:converters="clr-namespace:TimeWebAI.Converters"
                    xmlns:markup="clr-namespace:TimeWebAI.Markup">

    <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Border x:Name="Bd" 
                                    Background="{DynamicResource CurrentWindowBackground}"
                                    CornerRadius="5"
                                    Margin="2">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Togglebutton для сворачивания/развертывания -->
                                <ToggleButton x:Name="Expander" 
                                                Width="18" 
                                                Height="18"
                                                Margin="5,0,0,0"
                                                IsChecked="{Binding IsExpanded, 
                                                          RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                                                ClickMode="Press"
                                                Visibility="{Binding HasItems, 
                                                           RelativeSource={RelativeSource AncestorType=TreeViewItem}, 
                                                           Converter={markup:ResolveConverter ConverterType={x:Type converters:VisibilityConverter}}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="{DynamicResource CurrentWindowBackground}">
                                                            <Path x:Name="ExpandPath" 
                                                                      Fill="Black"
                                                                      Data="M 0 8 L 5 3 L 5 13 Z">
                                                                <Path.RenderTransform>
                                                                    <RotateTransform x:Name="ExpandPathRotate" 
                                                                                       Angle="0"
                                                                                       CenterX="3" 
                                                                                       CenterY="8"/>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation 
                                                                                    Storyboard.TargetName="ExpandPath"
                                                                                    Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                                                    To="-90"
                                                                                    Duration="0:0:0.2"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation 
                                                                                    Storyboard.TargetName="ExpandPath"
                                                                                    Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                                                    To="0"
                                                                                    Duration="0:0:0.2"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Fill" Value="Green"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <!-- Содержимое элемента -->
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="1" >
                                    <ContentControl Content="{Binding Icon, UpdateSourceTrigger=PropertyChanged}" 
                                                     Margin="5,0,10,0" FontFamily="Segoe UI Symbol">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger 
                                                        Binding="{Binding IsParrent,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="FontSize" Value="{Binding FontSize, Converter={markup:ResolveConverter ConverterType=converters:SizeLocationConverter}, ConverterParameter=height}"/>
                                                        <Setter Property="FontWeight" Value="DemiBold"/>
                                                    </DataTrigger>
                                                    <DataTrigger 
                                                        Binding="{Binding IsParrent,UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                        <Setter Property="FontSize" Value="{Binding FontSize, Converter={markup:ResolveConverter ConverterType=converters:SizeLocationConverter}, ConverterParameter=height}"/>
                                                        <Setter Property="FontWeight" Value="Medium"/>
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <ContentControl Content="{Binding Name, UpdateSourceTrigger=PropertyChanged}" 
                                                     VerticalAlignment="Center">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding IsParrent}" Value="True">
                                                        <Setter Property="FontSize" Value="{Binding FontSize, Converter={markup:ResolveConverter ConverterType=converters:SizeLocationConverter}, ConverterParameter=height}"/>
                                                        <Setter Property="FontWeight" Value="DemiBold"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsParrent}" Value="False">
                                                        <Setter Property="FontSize" Value="{Binding FontSize, Converter={markup:ResolveConverter ConverterType=converters:SizeLocationConverter}, ConverterParameter=height}"/>
                                                        <Setter Property="FontWeight" Value="Medium"/>
                                                    </DataTrigger>
                                                    <DataTrigger 
                                                        Binding="{Binding IsEnabled }" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding SelectItem, UpdateSourceTrigger=PropertyChanged}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!-- Контейнер для дочерних элементов -->
                        <ItemsPresenter x:Name="ItemsHost" 
                                          Margin="20,0,0,0"
                                          Visibility="{Binding IsExpanded, UpdateSourceTrigger=PropertyChanged,
                                                    RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                    Converter={markup:ResolveConverter ConverterType=converters:VisibilityConverter}}"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ItemsHost" 
                                   Storyboard.TargetProperty="Opacity"
                                   From="0" To="1" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ItemsHost" 
                                   Storyboard.TargetProperty="Opacity"
                                   From="1" To="0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>